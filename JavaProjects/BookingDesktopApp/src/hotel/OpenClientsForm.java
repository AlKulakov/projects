/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotel;

import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.Timer;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Александр
 */
public class OpenClientsForm extends javax.swing.JFrame {
    /**
     * Creates new form OpenClientsForm
     */
    private Client client = new Client();
    public OpenClientsForm() {
        initComponents();
        client.fillClientTable(clientsTable);
    }
    private int x;
    private int y;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        dataPanel = new javax.swing.JPanel();
        dataLabel = new javax.swing.JPanel();
        idLabel = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        firstNameLabel = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        fatherNameLabel = new javax.swing.JLabel();
        fatherNameField = new javax.swing.JTextField();
        phoneNumberLabel = new javax.swing.JLabel();
        phoneNumberField = new javax.swing.JTextField();
        mailLabel = new javax.swing.JLabel();
        mailField = new javax.swing.JTextField();
        secondNameLabel = new javax.swing.JLabel();
        secondNameField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        refreshButton = new javax.swing.JButton();
        resultLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        clientsTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        nameLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setUndecorated(true);

        mainPanel.setBackground(new java.awt.Color(255, 204, 102));
        mainPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mainPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                mainPanelMouseDragged(evt);
            }
        });
        mainPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mainPanelMousePressed(evt);
            }
        });

        dataPanel.setBackground(new java.awt.Color(255, 255, 204));
        dataPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        dataLabel.setBackground(new java.awt.Color(255, 204, 102));
        dataLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        idLabel.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        idLabel.setForeground(new java.awt.Color(51, 51, 0));
        idLabel.setText("ID:");

        idField.setBackground(new java.awt.Color(255, 255, 204));
        idField.setForeground(new java.awt.Color(51, 51, 0));
        idField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idFieldKeyPressed(evt);
            }
        });

        firstNameLabel.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        firstNameLabel.setForeground(new java.awt.Color(51, 51, 0));
        firstNameLabel.setText("Имя:*");

        firstNameField.setBackground(new java.awt.Color(255, 255, 204));
        firstNameField.setForeground(new java.awt.Color(51, 51, 0));
        firstNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                firstNameFieldKeyPressed(evt);
            }
        });

        fatherNameLabel.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        fatherNameLabel.setForeground(new java.awt.Color(51, 51, 0));
        fatherNameLabel.setText("Отчество:");

        fatherNameField.setBackground(new java.awt.Color(255, 255, 204));
        fatherNameField.setForeground(new java.awt.Color(51, 51, 0));
        fatherNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fatherNameFieldKeyPressed(evt);
            }
        });

        phoneNumberLabel.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        phoneNumberLabel.setForeground(new java.awt.Color(51, 51, 0));
        phoneNumberLabel.setText("Телефон:*+7");

        phoneNumberField.setBackground(new java.awt.Color(255, 255, 204));
        phoneNumberField.setForeground(new java.awt.Color(51, 51, 0));
        phoneNumberField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                phoneNumberFieldKeyPressed(evt);
            }
        });

        mailLabel.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        mailLabel.setForeground(new java.awt.Color(51, 51, 0));
        mailLabel.setText("E-Mail:");

        mailField.setBackground(new java.awt.Color(255, 255, 204));
        mailField.setForeground(new java.awt.Color(51, 51, 0));
        mailField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mailFieldKeyPressed(evt);
            }
        });

        secondNameLabel.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        secondNameLabel.setForeground(new java.awt.Color(51, 51, 0));
        secondNameLabel.setText("Фамилия:*");

        secondNameField.setBackground(new java.awt.Color(255, 255, 204));
        secondNameField.setForeground(new java.awt.Color(51, 51, 0));
        secondNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                secondNameFieldKeyPressed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(255, 255, 204));
        addButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addButton.setForeground(new java.awt.Color(51, 51, 0));
        addButton.setText("Добавить");
        addButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        editButton.setBackground(new java.awt.Color(255, 255, 204));
        editButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        editButton.setForeground(new java.awt.Color(51, 51, 0));
        editButton.setText("Изменить");
        editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        removeButton.setBackground(new java.awt.Color(255, 255, 204));
        removeButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        removeButton.setForeground(new java.awt.Color(51, 51, 0));
        removeButton.setText("Удалить");
        removeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(255, 255, 204));
        clearButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        clearButton.setForeground(new java.awt.Color(51, 51, 0));
        clearButton.setText("Очистить");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 0));
        jLabel1.setText("* - обязательные поля");

        refreshButton.setBackground(new java.awt.Color(255, 255, 204));
        refreshButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        refreshButton.setText("Обновить");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dataLabelLayout = new javax.swing.GroupLayout(dataLabel);
        dataLabel.setLayout(dataLabelLayout);
        dataLabelLayout.setHorizontalGroup(
            dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataLabelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dataLabelLayout.createSequentialGroup()
                        .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataLabelLayout.createSequentialGroup()
                                .addComponent(phoneNumberLabel)
                                .addGap(2, 2, 2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataLabelLayout.createSequentialGroup()
                                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(secondNameLabel)
                                    .addComponent(firstNameLabel)
                                    .addComponent(fatherNameLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataLabelLayout.createSequentialGroup()
                                .addComponent(idLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataLabelLayout.createSequentialGroup()
                                .addComponent(mailLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phoneNumberField)
                            .addComponent(mailField)
                            .addComponent(secondNameField)
                            .addComponent(fatherNameField)
                            .addComponent(firstNameField)
                            .addComponent(idField)))
                    .addGroup(dataLabelLayout.createSequentialGroup()
                        .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(removeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))))
                .addGap(25, 25, 25))
            .addGroup(dataLabelLayout.createSequentialGroup()
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dataLabelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(dataLabelLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(refreshButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dataLabelLayout.setVerticalGroup(
            dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataLabelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fatherNameLabel)
                    .addComponent(fatherNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(secondNameLabel)
                    .addComponent(secondNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneNumberLabel)
                    .addComponent(phoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mailLabel)
                    .addComponent(mailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(editButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeButton)
                    .addComponent(clearButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshButton)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        resultLabel.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        resultLabel.setForeground(new java.awt.Color(255, 0, 0));
        resultLabel.setText(" ");

        jScrollPane2.setBackground(new java.awt.Color(204, 255, 255));
        jScrollPane2.setOpaque(false);

        clientsTable.setBackground(new java.awt.Color(255, 255, 204));
        clientsTable.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        clientsTable.setForeground(new java.awt.Color(51, 51, 0));
        clientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Имя", "Отчество", "Фамилия", "Телефон +7", "E-Mail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        clientsTable.setColumnSelectionAllowed(true);
        clientsTable.getTableHeader().setOpaque(false);
        clientsTable.getTableHeader().setBackground(new Color(255, 204, 102));
        clientsTable.setGridColor(new java.awt.Color(255, 204, 102));
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        jScrollPane2.getViewport().setBackground(new Color(255,255,204));
        clientsTable.setRowHeight(30);
        headerRenderer = (DefaultTableCellRenderer)
        clientsTable.getTableHeader().getDefaultRenderer();
        headerRenderer.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        headerRenderer.setBackground(new Color(255, 204, 102));
        clientsTable.setSelectionBackground(new java.awt.Color(255, 204, 102));
        clientsTable.setSelectionForeground(new java.awt.Color(51, 51, 0));
        clientsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        clientsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        clientsTable.setShowGrid(false);
        clientsTable.setShowHorizontalLines(true);
        clientsTable.setCellSelectionEnabled(false);
        clientsTable.setRowSelectionAllowed(true);
        clientsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientsTableMouseClicked(evt);
            }
        });
        DefaultTableCellRenderer rendar = new DefaultTableCellRenderer();
        rendar.setHorizontalAlignment(jLabel1.CENTER);
        for(int i = 0; i<6; i++){
            clientsTable.getColumnModel().getColumn(i).setCellRenderer(rendar);
        }
        jScrollPane2.setViewportView(clientsTable);
        clientsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (clientsTable.getColumnModel().getColumnCount() > 0) {
            clientsTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            clientsTable.getColumnModel().getColumn(1).setPreferredWidth(35);
            clientsTable.getColumnModel().getColumn(2).setPreferredWidth(35);
            clientsTable.getColumnModel().getColumn(3).setPreferredWidth(35);
            clientsTable.getColumnModel().getColumn(4).setPreferredWidth(40);
        }

        jLabel2.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 0));
        jLabel2.setText("Данные");

        jLabel3.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel3.setText("База данных");

        javax.swing.GroupLayout dataPanelLayout = new javax.swing.GroupLayout(dataPanel);
        dataPanel.setLayout(dataPanelLayout);
        dataPanelLayout.setHorizontalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dataPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(resultLabel))
                    .addGroup(dataPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(dataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 966, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(451, 451, 451))
        );
        dataPanelLayout.setVerticalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dataPanelLayout.createSequentialGroup()
                        .addComponent(dataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(resultLabel)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        closeButton.setBackground(new java.awt.Color(255, 204, 102));
        closeButton.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        closeButton.setForeground(new java.awt.Color(255, 255, 204));
        closeButton.setText("X");
        closeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                closeButtonMousePressed(evt);
            }
        });

        nameLabel.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(51, 51, 0));
        nameLabel.setText("Клиенты");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nameLabel)
                .addGap(541, 541, 541)
                .addComponent(closeButton)
                .addContainerGap())
            .addComponent(dataPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMousePressed
        MainForm.OpenClientFormsCount--;
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_closeButtonMousePressed

    private void closeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseEntered
        closeButton.setBackground(Color.RED);        // TODO add your handling code here:
    }//GEN-LAST:event_closeButtonMouseEntered

    private void closeButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseExited
        closeButton.setBackground(new Color(255, 204, 102));        // TODO add your handling code here:
    }//GEN-LAST:event_closeButtonMouseExited

    private void mainPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPanelMousePressed
        x = evt.getX();
        y = evt.getY();        // TODO add your handling code here:
    }//GEN-LAST:event_mainPanelMousePressed

    private void mainPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPanelMouseDragged
        this.setLocation(evt.getXOnScreen() - x, evt.getYOnScreen() - y);        // TODO add your handling code here:
    }//GEN-LAST:event_mainPanelMouseDragged

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        fieldsClearing();
        // TODO add your handling code here:
    }//GEN-LAST:event_clearButtonActionPerformed
    private void fieldsClearing(){
        idField.setText("");
        firstNameField.setText("");
        fatherNameField.setText("");
        secondNameField.setText("");
        phoneNumberField.setText("");
        mailField.setText("");
    }
    private void wrongDataDelay(){
            resultLabel.setText("Ошибка. Введены неверные данные.");
            Timer timer = new Timer(4000, e-> {
            resultLabel.setText(" ");});
            timer.start();
    }
    private void wrongFieldDelay(javax.swing.JTextField field){
        if(!field.getBackground().equals(Color.red)){
            field.setBackground(Color.red);
            field.setForeground(new Color(255, 255,204));
            Timer timer = new Timer(1000, e-> {
            field.setBackground(new Color(255, 255,204));
            field.setForeground(new Color(51, 51, 0));});
            timer.start();
        }
    }
    private boolean emailValidate(String email){
        int countAtSign = 0;
        int countDot = 0;
        boolean dotAfterAtSign = false;
        for(int i = 0; i<email.length(); i++){
            if(countAtSign==1 && countDot==0){
                if(email.charAt(i)=='.'){
                    countDot++;
                    dotAfterAtSign = true;
                    continue;
                }
            }
            if(email.charAt(i)=='.'){
                countDot++;
            }
            if(email.charAt(i)=='@'){
                countAtSign++;
            }
        }
        if(countAtSign==1 && countDot==1 && dotAfterAtSign==true){
            return true;
        }
        else return false;
    }
    public boolean isNumeric(String number){
        try{
            for(char letter : number.toCharArray())
                Integer.parseInt("" + letter);
            return true;
        } catch(NumberFormatException e){
            return false;
        }
    }
    public boolean isAlpabetic(String str){
        char[] word = str.toCharArray();
        for(char letter : word){
            if(!Character.isLetter(letter))
                return false;
        }
        return true;
    }
    private boolean dataConfirm(String firstName, String fatherName, String secondName, String phone, String email){
        boolean firstNameConfirm = false;
        boolean fatherNameConfirm = true;
        boolean secondNameConfirm = false;
        boolean emailConfirm = false;
        boolean phoneConfirm = false;
        
        if(!firstName.trim().equals("") && isAlpabetic(firstName)){
            firstNameConfirm = true;
        }
        else wrongFieldDelay(firstNameField);

        if(!isAlpabetic(fatherName)){
            fatherNameConfirm = false;
            wrongFieldDelay(fatherNameField);
        }

        if(!secondName.trim().equals("")&& isAlpabetic(secondName)){
            secondNameConfirm = true;
        }
        else wrongFieldDelay(secondNameField);
        if(phone.length()==10 && isNumeric(phone)){
            phoneConfirm = true;
            
        }
        else wrongFieldDelay(phoneNumberField);

        if(emailValidate(email) || email.trim().equals("")){
            emailConfirm = true;
        }
        else wrongFieldDelay(mailField);


        return firstNameConfirm && secondNameConfirm && 
        emailConfirm && phoneConfirm && fatherNameConfirm;
    }
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        client = new Client();
        String firstName = firstNameField.getText();
        String fatherName = fatherNameField.getText();
        String secondName = secondNameField.getText();
        String phone = phoneNumberField.getText();
        String mail = mailField.getText();
            if(dataConfirm(firstName, fatherName, secondName, phone, mail))
                if(client.addClient(firstName, fatherName, secondName, phone, mail)){
                    resultLabel.setText("Клиент добавлен!");
                    fieldsClearing();
                    refreshTable();
                }
                else {
                    wrongDataDelay();
                }
            else {
                wrongDataDelay();
            }
    }//GEN-LAST:event_addButtonActionPerformed

    private void clientsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientsTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) clientsTable.getModel();
        int rowIndex = clientsTable.getSelectedRow();
        idField.setText(model.getValueAt(rowIndex, 0).toString());
        firstNameField.setText(model.getValueAt(rowIndex, 1).toString());
        fatherNameField.setText(model.getValueAt(rowIndex, 2).toString());
        secondNameField.setText(model.getValueAt(rowIndex, 3).toString());
        phoneNumberField.setText(model.getValueAt(rowIndex, 4).toString());
        mailField.setText(model.getValueAt(rowIndex, 5).toString());
        
    }//GEN-LAST:event_clientsTableMouseClicked

    private void idFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idFieldKeyPressed
    if(evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_DOWN)
        firstNameField.requestFocus();
    }//GEN-LAST:event_idFieldKeyPressed

    private void firstNameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstNameFieldKeyPressed
    if(evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_DOWN)
        fatherNameField.requestFocus();        // TODO add your handling code here:
    else if(evt.getKeyCode() == KeyEvent.VK_UP){
        idField.requestFocus();
    }
    }//GEN-LAST:event_firstNameFieldKeyPressed

    private void fatherNameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fatherNameFieldKeyPressed
    if(evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_DOWN)
        secondNameField.requestFocus();        // TODO add your handling code here:
    else if(evt.getKeyCode() == KeyEvent.VK_UP){
        firstNameField.requestFocus();
    }            // TODO add your handling code here:
    }//GEN-LAST:event_fatherNameFieldKeyPressed

    private void secondNameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_secondNameFieldKeyPressed
    if(evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_DOWN)
        phoneNumberField.requestFocus();        // TODO add your handling code here:
    else if(evt.getKeyCode() == KeyEvent.VK_UP){
        fatherNameField.requestFocus();
    }                // TODO add your handling code here:
    }//GEN-LAST:event_secondNameFieldKeyPressed

    private void phoneNumberFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneNumberFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_DOWN)
            mailField.requestFocus();        // TODO add your handling code here:
        else if(evt.getKeyCode() == KeyEvent.VK_UP){
            secondNameField.requestFocus();
    }        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumberFieldKeyPressed

    private void mailFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mailFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_UP)
            phoneNumberField.requestFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_mailFieldKeyPressed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        client = new Client();
        
        int id = 0;
        try{     
            id = Integer.parseInt(idField.getText());
        } catch(NumberFormatException e){
            wrongFieldDelay(idField);
            wrongDataDelay();
        }
        String firstName = firstNameField.getText();
        String fatherName = fatherNameField.getText();
        String secondName = secondNameField.getText();
        String phone = phoneNumberField.getText();
        String mail = mailField.getText();
            if(dataConfirm(firstName, fatherName, secondName, phone, mail))
                if(client.editClient(id, firstName, fatherName, secondName, phone, mail)){
                    resultLabel.setText("Данные изменены!");
                    refreshTable();
                }
                else {
                    wrongDataDelay();
                    wrongFieldDelay(idField);
                }
            else {
                wrongDataDelay();
            }
    }//GEN-LAST:event_editButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        int id = 0;
        try{     
            id = Integer.parseInt(idField.getText());
        } catch(NumberFormatException e){
            wrongFieldDelay(idField);
            wrongDataDelay();
        }
        if(client.removeClient(id)){
            resultLabel.setText("Клиент удален!");
            fieldsClearing();
            refreshTable();
        }
        else {
            wrongDataDelay();
            wrongFieldDelay(idField);
        }
    }//GEN-LAST:event_removeButtonActionPerformed
    private void refreshTable(){
        clientsTable.setModel(new DefaultTableModel(null, new Object[]{"ID","Имя","Отчество","Фамилия","Телефон","E-Mail"}));
        client.fillClientTable(clientsTable);
    }
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        refreshTable();        // TODO add your handling code here:
    }//GEN-LAST:event_refreshButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OpenClientsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OpenClientsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OpenClientsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OpenClientsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OpenClientsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JTable clientsTable;
    private javax.swing.JButton closeButton;
    private javax.swing.JPanel dataLabel;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JButton editButton;
    private javax.swing.JTextField fatherNameField;
    private javax.swing.JLabel fatherNameLabel;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField mailField;
    private javax.swing.JLabel mailLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField phoneNumberField;
    private javax.swing.JLabel phoneNumberLabel;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JTextField secondNameField;
    private javax.swing.JLabel secondNameLabel;
    // End of variables declaration//GEN-END:variables
}
