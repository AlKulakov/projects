/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotel;

import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Александр
 */
public class OpenBookedRooms extends javax.swing.JFrame {

    /**
     * Creates new form OpenBookedRooms
     */
    public OpenBookedRooms() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        dataPanel = new javax.swing.JPanel();
        dataLabel = new javax.swing.JPanel();
        idLabel = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        clientIdLabel = new javax.swing.JLabel();
        clientIdField = new javax.swing.JTextField();
        roomNumberLabel = new javax.swing.JLabel();
        roomNumberField = new javax.swing.JTextField();
        outDateLabel = new javax.swing.JLabel();
        outDateField = new javax.swing.JTextField();
        inDateLabel = new javax.swing.JLabel();
        inDateField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        refreshButton = new javax.swing.JButton();
        resultLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        reservedRoomsTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        nameLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setBackground(new java.awt.Color(255, 204, 102));
        mainPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mainPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                mainPanelMouseDragged(evt);
            }
        });
        mainPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mainPanelMousePressed(evt);
            }
        });

        dataPanel.setBackground(new java.awt.Color(255, 255, 204));
        dataPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        dataLabel.setBackground(new java.awt.Color(255, 204, 102));
        dataLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        idLabel.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        idLabel.setForeground(new java.awt.Color(51, 51, 0));
        idLabel.setText("ID:");

        idField.setBackground(new java.awt.Color(255, 255, 204));
        idField.setForeground(new java.awt.Color(51, 51, 0));
        idField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idFieldKeyPressed(evt);
            }
        });

        clientIdLabel.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        clientIdLabel.setForeground(new java.awt.Color(51, 51, 0));
        clientIdLabel.setText("ID клиента:*");

        clientIdField.setBackground(new java.awt.Color(255, 255, 204));
        clientIdField.setForeground(new java.awt.Color(51, 51, 0));
        clientIdField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                clientIdFieldKeyPressed(evt);
            }
        });

        roomNumberLabel.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        roomNumberLabel.setForeground(new java.awt.Color(51, 51, 0));
        roomNumberLabel.setText("Номер комнаты:");

        roomNumberField.setBackground(new java.awt.Color(255, 255, 204));
        roomNumberField.setForeground(new java.awt.Color(51, 51, 0));
        roomNumberField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                roomNumberFieldKeyPressed(evt);
            }
        });

        outDateLabel.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        outDateLabel.setForeground(new java.awt.Color(51, 51, 0));
        outDateLabel.setText("Выселился:");

        outDateField.setBackground(new java.awt.Color(255, 255, 204));
        outDateField.setForeground(new java.awt.Color(51, 51, 0));
        outDateField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                outDateFieldKeyPressed(evt);
            }
        });

        inDateLabel.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        inDateLabel.setForeground(new java.awt.Color(51, 51, 0));
        inDateLabel.setText("Поселился:");

        inDateField.setBackground(new java.awt.Color(255, 255, 204));
        inDateField.setForeground(new java.awt.Color(51, 51, 0));
        inDateField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inDateFieldKeyPressed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(255, 255, 204));
        addButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addButton.setForeground(new java.awt.Color(51, 51, 0));
        addButton.setText("Добавить");
        addButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        editButton.setBackground(new java.awt.Color(255, 255, 204));
        editButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        editButton.setForeground(new java.awt.Color(51, 51, 0));
        editButton.setText("Изменить");
        editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        removeButton.setBackground(new java.awt.Color(255, 255, 204));
        removeButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        removeButton.setForeground(new java.awt.Color(51, 51, 0));
        removeButton.setText("Удалить");
        removeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(255, 255, 204));
        clearButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        clearButton.setForeground(new java.awt.Color(51, 51, 0));
        clearButton.setText("Очистить");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 0));
        jLabel1.setText("* - обязательные поля");

        refreshButton.setBackground(new java.awt.Color(255, 255, 204));
        refreshButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        refreshButton.setText("Обновить");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dataLabelLayout = new javax.swing.GroupLayout(dataLabel);
        dataLabel.setLayout(dataLabelLayout);
        dataLabelLayout.setHorizontalGroup(
            dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataLabelLayout.createSequentialGroup()
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dataLabelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(removeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(dataLabelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dataLabelLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inDateLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(outDateLabel, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(roomNumberLabel)
                                .addComponent(clientIdLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(idLabel, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(idField)
                            .addComponent(clientIdField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(outDateField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inDateField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(roomNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25))
            .addGroup(dataLabelLayout.createSequentialGroup()
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dataLabelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(dataLabelLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(refreshButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dataLabelLayout.setVerticalGroup(
            dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataLabelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clientIdLabel)
                    .addComponent(clientIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomNumberLabel)
                    .addComponent(roomNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inDateLabel)
                    .addComponent(inDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outDateLabel)
                    .addComponent(outDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(editButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dataLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeButton)
                    .addComponent(clearButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshButton)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        resultLabel.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        resultLabel.setForeground(new java.awt.Color(255, 0, 0));
        resultLabel.setText(" ");

        jScrollPane2.setBackground(new java.awt.Color(204, 255, 255));
        jScrollPane2.setOpaque(false);

        reservedRoomsTable.setBackground(new java.awt.Color(255, 255, 204));
        reservedRoomsTable.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        reservedRoomsTable.setForeground(new java.awt.Color(51, 51, 0));
        reservedRoomsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Имя", "Отчество", "Фамилия", "Телефон +7", "E-Mail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        reservedRoomsTable.setColumnSelectionAllowed(true);
        reservedRoomsTable.setGridColor(new java.awt.Color(255, 204, 102));
        reservedRoomsTable.setRowHeight(30);
        reservedRoomsTable.setSelectionBackground(new java.awt.Color(255, 204, 102));
        reservedRoomsTable.setSelectionForeground(new java.awt.Color(51, 51, 0));
        reservedRoomsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        reservedRoomsTable.setSelectionMode();
        reservedRoomsTable.setShowGrid(false);
        reservedRoomsTable.setShowHorizontalLines(true);
        reservedRoomsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reservedRoomsTableMouseClicked(evt);
            }
        });
        DefaultTableCellRenderer rendar = new DefaultTableCellRenderer();
        rendar.setHorizontalAlignment(jLabel1.CENTER);
        for(int i = 0; i<6; i++){
            reservedRoomsTable.getColumnModel().getColumn(i).setCellRenderer(rendar);
        }
        jScrollPane2.setViewportView(reservedRoomsTable);

        jLabel2.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 0));
        jLabel2.setText("Данные");

        jLabel3.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel3.setText("База данных");

        javax.swing.GroupLayout dataPanelLayout = new javax.swing.GroupLayout(dataPanel);
        dataPanel.setLayout(dataPanelLayout);
        dataPanelLayout.setHorizontalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dataPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(resultLabel))
                    .addGroup(dataPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(dataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 966, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(451, 451, 451))
        );
        dataPanelLayout.setVerticalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dataPanelLayout.createSequentialGroup()
                        .addComponent(dataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(resultLabel)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        closeButton.setBackground(new java.awt.Color(255, 204, 102));
        closeButton.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        closeButton.setForeground(new java.awt.Color(255, 255, 204));
        closeButton.setText("X");
        closeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                closeButtonMousePressed(evt);
            }
        });

        nameLabel.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(51, 51, 0));
        nameLabel.setText("Занятые номера");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nameLabel)
                .addGap(532, 532, 532)
                .addComponent(closeButton)
                .addContainerGap())
            .addComponent(dataPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   private void wrongDataDelay(){
            resultLabel.setText("Ошибка. Введены неверные данные.");
            Timer timer = new Timer(4000, e-> {
            resultLabel.setText(" ");});
            timer.start();
    }
    private void wrongFieldDelay(javax.swing.JTextField field){
        if(!field.getBackground().equals(Color.red)){
            field.setBackground(Color.red);
            field.setForeground(new Color(255, 255,204));
            Timer timer = new Timer(1000, e-> {
            field.setBackground(new Color(255, 255,204));
            field.setForeground(new Color(51, 51, 0));});
            timer.start();
        }
    }
    
    public boolean isNumeric(String number){
        try{
            for(char letter : number.toCharArray())
                Integer.parseInt("" + letter);
            return true;
        } catch(NumberFormatException e){
            return false;
        }
    }
    private void idFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_DOWN)
        clientIdField.requestFocus();
    }//GEN-LAST:event_idFieldKeyPressed

    private void clientIdFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientIdFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_DOWN)
        roomNumberField.requestFocus();        // TODO add your handling code here:
        else if(evt.getKeyCode() == KeyEvent.VK_UP){
            idField.requestFocus();
        }
    }//GEN-LAST:event_clientIdFieldKeyPressed

    private void roomNumberFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roomNumberFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_DOWN)
        inDateField.requestFocus();        // TODO add your handling code here:
        else if(evt.getKeyCode() == KeyEvent.VK_UP){
            clientIdField.requestFocus();
        }            // TODO add your handling code here:
    }//GEN-LAST:event_roomNumberFieldKeyPressed

    private void outDateFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_outDateFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_DOWN)
        mailField.requestFocus();        // TODO add your handling code here:
        else if(evt.getKeyCode() == KeyEvent.VK_UP){
            inDateField.requestFocus();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_outDateFieldKeyPressed

    private void inDateFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inDateFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_DOWN)
        outDateField.requestFocus();        // TODO add your handling code here:
        else if(evt.getKeyCode() == KeyEvent.VK_UP){
            roomNumberField.requestFocus();
        }                // TODO add your handling code here:
    }//GEN-LAST:event_inDateFieldKeyPressed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        client = new Client();
        String firstName = clientIdField.getText();
        String fatherName = roomNumberField.getText();
        String secondName = inDateField.getText();
        String phone = outDateField.getText();
        String mail = mailField.getText();
        if(dataConfirm(firstName, fatherName, secondName, phone, mail))
        if(client.addClient(firstName, fatherName, secondName, phone, mail)){
            resultLabel.setText("Клиент добавлен!");
            fieldsClearing();
            refreshTable();
        }
        else {
            wrongDataDelay();
        }
        else {
            wrongDataDelay();
        }
    }//GEN-LAST:event_addButtonActionPerformed
private void refreshTable(){
        reservedRoomsTable.setModel(new DefaultTableModel(null, new Object[]{"Номер","Тип","Телефон","Статус"}));
        reserveRoom.fillRoomsTable(reservedRoomsTable);
    }
    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        client = new Client();

        int id = 0;
        try{
            id = Integer.parseInt(idField.getText());
        } catch(NumberFormatException e){
            wrongFieldDelay(idField);
            wrongDataDelay();
        }
        String firstName = clientIdField.getText();
        String fatherName = roomNumberField.getText();
        String secondName = inDateField.getText();
        String phone = outDateField.getText();
        String mail = mailField.getText();
        if(dataConfirm(firstName, fatherName, secondName, phone, mail))
        if(client.editClient(id, firstName, fatherName, secondName, phone, mail)){
            resultLabel.setText("Данные изменены!");
            refreshTable();
        }
        else {
            wrongDataDelay();
            wrongFieldDelay(idField);
        }
        else {
            wrongDataDelay();
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        int id = 0;
        try{
            id = Integer.parseInt(idField.getText());
        } catch(NumberFormatException e){
            wrongFieldDelay(idField);
            wrongDataDelay();
        }
        if(client.removeClient(id)){
            resultLabel.setText("Клиент удален!");
            fieldsClearing();
            refreshTable();
        }
        else {
            wrongDataDelay();
            wrongFieldDelay(idField);
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        fieldsClearing();
        // TODO add your handling code here:
    }//GEN-LAST:event_clearButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        refreshTable();        // TODO add your handling code here:
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void reservedRoomsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reservedRoomsTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) reservedRoomsTable.getModel();
        int rowIndex = reservedRoomsTable.getSelectedRow();
        idField.setText(model.getValueAt(rowIndex, 0).toString());
        clientIdField.setText(model.getValueAt(rowIndex, 1).toString());
        roomNumberField.setText(model.getValueAt(rowIndex, 2).toString());
        inDateField.setText(model.getValueAt(rowIndex, 3).toString());
        outDateField.setText(model.getValueAt(rowIndex, 4).toString());
        mailField.setText(model.getValueAt(rowIndex, 5).toString());

    }//GEN-LAST:event_reservedRoomsTableMouseClicked

    private void closeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseEntered
        closeButton.setBackground(Color.RED);        // TODO add your handling code here:
    }//GEN-LAST:event_closeButtonMouseEntered

    private void closeButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseExited
        closeButton.setBackground(new Color(255, 204, 102));        // TODO add your handling code here:
    }//GEN-LAST:event_closeButtonMouseExited

    private void closeButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMousePressed
        MainForm.OpenClientFormsCount--;
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_closeButtonMousePressed

    private void mainPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPanelMouseDragged
        this.setLocation(evt.getXOnScreen() - x, evt.getYOnScreen() - y);        // TODO add your handling code here:
    }//GEN-LAST:event_mainPanelMouseDragged

    private void mainPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPanelMousePressed
        x = evt.getX();
        y = evt.getY();        // TODO add your handling code here:
    }//GEN-LAST:event_mainPanelMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OpenBookedRooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OpenBookedRooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OpenBookedRooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OpenBookedRooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OpenBookedRooms().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField clientIdField;
    private javax.swing.JLabel clientIdLabel;
    private javax.swing.JButton closeButton;
    private javax.swing.JPanel dataLabel;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JButton editButton;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField inDateField;
    private javax.swing.JLabel inDateLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField outDateField;
    private javax.swing.JLabel outDateLabel;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JTable reservedRoomsTable;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JTextField roomNumberField;
    private javax.swing.JLabel roomNumberLabel;
    // End of variables declaration//GEN-END:variables
}
